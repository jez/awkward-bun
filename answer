#!/usr/bin/env python

import sys
import tfidf
import answer_finding
import question_classification
import grammar_util    
import codecs
article_name = sys.argv[1]
query_name = sys.argv[2]

num_sentences = 5
print "...all systems nominal"

with codecs.open(query_name, encoding="utf-8") as query_f:
    queries = query_f.readlines()
print "...queries read"
scoring_function = tfidf.tfidf(article_name)
print "...tfidf calculated"
query_trees = map(lambda x: question_classification.q_class(x), queries)
print "...queries parsed"
sentences_lists = map(lambda x: scoring_function(x, num_sentences), queries)
print "...relevant sentences found"
print sentences_lists
results = map(lambda (sents, query): answer_finding.select_answer(sents, query), zip(sentences_lists, query_trees))
for i in results:
     print(grammar_util.as_string(i))
